const authToken=localStorage.token;function createDialog(e,t=[]){const o=document.createElement("div");o.className="mui-style-global",o.style.position="fixed",o.style.top="50%",o.style.left="50%",o.style.transform="translate(-50%, -50%)",o.style.zIndex="10000",o.style.backgroundColor="#121212",o.style.color="#fff",o.style.padding="20px",o.style.border="1px solid #ccc",o.style.boxShadow="0 4px 8px rgba(0, 0, 0, 0.2)";const l=document.createElement("div");l.innerHTML=e,o.appendChild(l);const a=document.createElement("div");return a.style.marginTop="20px",a.style.textAlign="right",t.forEach((e=>{const t=document.createElement("button");t.textContent=e.label,t.className="MuiButton-root",t.style.marginLeft="10px",t.style.cursor="pointer",t.addEventListener("click",(()=>{e.onClick&&e.onClick(),document.body.removeChild(o)})),a.appendChild(t)})),o.appendChild(a),document.body.appendChild(o),o}async function fetchAllMembers(e){let t=1,o=[];for(;;){const l=await fetch(`https://restorecord.com/api/v2/server/members?page=${t}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:authToken}});if(!l.ok){console.error(`Failed to fetch members: ${l.status}`);break}const a=await l.json();if(!(a.success&&a.members.length>0))break;o=o.concat(a.members),t++,e(o.length)}return o}async function updateAllMembers(e,t){let o=e.length,l=0;await Promise.all(e.map((async e=>{await updateMember(e.id),l++,t(l,o)})))}async function updateMember(e){try{const t=`https://restorecord.com/api/v2/member/${e}`,o=await fetch(t,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:authToken}});o.ok||console.error(`Failed to update member ${e}: ${o.status}`)}catch(t){console.error(`Error updating member ${e}:`,t)}}function createProgressDialog(){const e=document.createElement("div");e.className="mui-style-global",e.style.position="fixed",e.style.top="50%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",e.style.zIndex="10000",e.style.backgroundColor="#121212",e.style.color="#fff",e.style.padding="20px",e.style.border="1px solid #ccc",e.style.boxShadow="0 4px 8px rgba(0, 0, 0, 0.2)";const t=document.createElement("div");t.innerHTML="0/0 members",e.appendChild(t);const o=document.createElement("progress");return o.value=0,o.max=100,o.style.width="100%",e.appendChild(o),document.body.appendChild(e),{update:(e,l)=>{t.innerHTML=`${e}/${l} members`,o.value=e/l*100},close:()=>{document.body.removeChild(e)}}}async function pullMembers(){createDialog("Are you sure you want to pull all the members?",[{label:"Cancel"},{label:"Yes",onClick:async()=>{const e=createProgressDialog(),t=await fetchAllMembers((t=>{e.update(t,t)}));await updateAllMembers(t,((t,o)=>{e.update(t,o)})),e.close(),createDialog("Pulled all members!",[{label:"OK"}])}}])}pullMembers();
